name: Deploy to GitHub Pages

on:
  push:
    branches: [ frontend-dev ]  # 只在 frontend-dev branch push 時觸發

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      # 1️⃣ Checkout 代碼
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ 安裝 Node.js，並指定 lock file 位置以正確使用 cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # 3️⃣ 安裝依賴（frontend 子資料夾）
      - name: Install dependencies
        run: npm ci
        working-directory: frontend

      # 4️⃣ Build frontend
      - name: Build frontend
        run: npm run build
        working-directory: frontend
        env:
          NODE_ENV: production

      # 4.1️⃣ 列出 build 產生的資料夾
      - name: List frontend folder
        run: ls -R frontend

      # 5️⃣ 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 根據專案自動選擇 build output
          publish_dir: ./frontend/dist  # Vite 預設
          # publish_dir: ./frontend/build  # 如果是 React CRA，請改成這個
          publish_branch: gh-pages       # 確保與 GitHub Pages 設定一致
          clean: true
